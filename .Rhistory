setwd("C:/DSA/RAzureMachineLearning/CursoR/DSA.SV.RAzureML.Cap03")
?Sample
?sample
args(sample)
args(mean)
args(sd)
#Funções bult-in
abs(-43)
sum(c(1:5))
round(c(1.1:5.8))
vec1<-c(1.5, 2.5, 8.4, 4.5, 3.2)
vec2<-rev(vec1)
vec2
plot(rnorm(10))
myfunc<-function(x) {x+x}
myfunc(20)
jogando_dados <- function(){
num<-sample(1:6, size=1)#Local
num
}
jogando_dados
jogando_dados()
jogando_dados()
jogando_dados()
jogando_dados()
jogando_dados()
#Funções sem numero definido de argumentos
vec1<-(10:13)
vec2<-c('a','b','c','d')
vec3 <- c(6.5, 9.2, 11.9, 5.1)
myfunc3 <- function(...){
df = data.frame(cbind(...))
print(df)
}
myfunc3(vec1)
myfunc3(vec1,vec2)
myfunc3(vec1,vec3)
# Usando um Loop
lista1 <- list(a = (1:20), b = (35:67))
valor_a = 0
valor_b = 0
for (i in lista1$a){
valor_a = valor_a + i
}
for (j in lista1$b){
valor_b = valor_b + j
}
print(valor_a)
print(valor_b)
sapply(lista1, sum)
# Calculando cada elemento da lista com sapply
?sapply
# Aplicando funções com sapply
sapply(lista1, mean)
x <- matrix(c(20, 13, 65, 32, 45, 12, 76, 49, 82), nr = 3, byrow = T)
x
apply(x, mean)
apply(x, 1, mean)
apply(x, 2, mean)
apply(x, 1, plot)
resultapply <- apply(x, 1, mean)
resultapply
# Aplicando apply() a um Dataframe
escola <- data.frame(Aluno = c('Bob', 'Tereza', 'Marta', 'Felipe', 'Zacarias', 'Elton'),
Fisica = c(91, 82, 75, 97, 62, 74),
Matematica = c(99, 100, 86, 92, 91, 87),
Quimica = c(56, 72, 49, 68, 59, 77))
escola
escola$Matematica
# Calculando a média por aluno
escola$Media = NA
escola
escola$Media = apply(escola[,c(2, 3, 4)], 1, mean)
escola
escola$Media = round(escola$Media)
escola
tabela_basquete <-
data.frame(equipe = gl(5, 5, labels = paste("Equipe", LETTERS[1:5])),
jogador = sample(letters, 25),
num_cestas = floor(runif(25, min=0, max=50)))
View(tabela_basquete)
summary(tabela_basquete)
# tapply() vs sqldf
install.packages('sqldf')
library(sqldf)
# tapply() vs sqldf
install.packages('sqldf')
library(sqldf)
sqldf("select equipe, sum(num_cestas) from tabela_basquete group by equipe")
tapply(tabela_basquete$num_cestas, tabela_basquete$equipe, sum)
tapply(tabela_basquete$num_cestas, tabela_basquete$equipe, mean)
sqldf("select equipe, mean(num_cestas) from tabela_basquete group by equipe")
# by
?by
dat <- data.frame(species=c(rep(c(1,2,3), each=5)),
petal.length=c(rnorm(5, 4.5, 1),
rnorm(5, 4.5, 1),
rnorm(5, 5.5, 1)),
petal.width=c(rnorm(5, 2.5, 1),
rnorm(5, 2.5, 1),
rnorm(5, 4, 1)))
dat <- data.frame(species=c(rep(c(1,2,3), each=5)),
petal.length=c(rnorm(5, 4.5, 1),
rnorm(5, 4.5, 1),
rnorm(5, 5.5, 1)),
petal.width=c(rnorm(5, 2.5, 1),
rnorm(5, 2.5, 1),
rnorm(5, 4, 1)))
dat$species <- factor(dat$species)
View(dat)
by(dat, dat$species, function(x){
# calcular o comprimento médio da pétala para cada espécie
mean.pl <- mean(x$petal.length)
})
# lapply()
?lapply
lista1 <- list(a = (1:10), b = (45:77))
lista1
lapply(lista1, sum)
sapply(lista1, sum)
# A função fivenum() retorna 5 estatísticas do conjunto de dados: (minimum, lower-hinge, median, upper-hinge, maximum)
# https://stat.ethz.ch/R-manual/R-patched/library/stats/html/fivenum.html
vapply(lista1,
fivenum,
c(Min. = 0,
"1stQu." = 0,
Median = 0,
"3rd Qu." = 0,
Max = 0))
replicate(7, runif(10))
mapply(rep, 1:4, 4:1)
lista2 <- list(a = c(1:5), b = c(6:10))
lista2
rapply(lista2, sum)
rapply(lista2, sum, how = "list")
rapply(lista2, sum, how = "vector")
rapply(lista2, sum, how = "list")
